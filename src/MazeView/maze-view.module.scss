.mazeView {
  --base-time: .11s;

  svg {
    border: 1px solid #777;
    transform: rotateX(45deg) rotateZ(-45deg);
    transform-style: preserve-3d;
    transition: transform 0.3s ease-in-out;


    path {
      stroke-dasharray: calc(var(--path-length) * 40px);
      stroke-dashoffset: calc(var(--path-length) * 40px);
      
      // animation: dash calc(var(--path-length) * var(--base-time)) linear forwards;
      // animation-delay: calc(var(--animation-delay) * calc(var(--base-time) * 0.714));

      &.completed {
        animation: dash calc(var(--path-length) * var(--base-time)) linear forwards;
      }
      
      &.current {
        //animation: dash 23s linear infinite;
        stroke: hsla(330, 100%, 71%, .77);
        stroke: white;
        stroke-width: 2px;
        // stroke-dasharray: 40px;
        //transition: stroke .23s, stroke-width .23s;
      }

      position: relative;
    }

    circle {
      // animation: appear .7s linear forwards;
      // animation-delay: calc(var(--animation-delay) * calc(var(--base-time) * 0.714) + calc(var(--disstance-from-path-beginning) * var(--base-time) - 0.7s) );
      // opacity: 0;
      // transform: scale(0);
      transition: fill .11s;
      fill: hsla(0, 0%, 50%, .11);
      &.completed {
        fill: hsla(240, 100%, 71%, .42);
      }
      &.current.completed, .completed:hover {
        fill: hotpink;
        animation: pulsate 1.4s ease-in-out infinite;
      }
      &.completed.ending {
        fill: gold;
      }
    }

    @keyframes dash {
      to {
        stroke-dashoffset: 0;
      }
    }

    @keyframes appear {
      0% {
        opacity: 0;
        transform: scale(.1);
      }
      77% {
        opacity: 1;
        transform: scale(1.1);
      }
      100% {
        opacity: 1;
        transform: scale(1);
      }
    }

    --pulsate-from: calc((var(--cell-size) / 1.3 - var(--stroke-width) * 1.4) * 1px);
    --pulsate-to: calc((var(--cell-size) / 1.3 - var(--stroke-width) * 1.4) * 1.1 * 1px);

    @keyframes pulsate {
      0% {
        r: calc((var(--cell-size) / 1.3 - var(--stroke-width) * 1.4) * 1.0 * 1px);
      }
      50% {
        r: calc((var(--cell-size) / 1.3 - var(--stroke-width) * 1.4) * 1.2 * 1px);
      }
      100% {
        r: calc((var(--cell-size) / 1.3 - var(--stroke-width) * 1.4) * 1.0 * 1px);
      }
    }
  }
}